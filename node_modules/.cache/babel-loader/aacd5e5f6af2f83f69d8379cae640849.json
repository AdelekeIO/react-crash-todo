{"ast":null,"code":"var _jsxFileName = \"/opt/ReactJsApps/react_crash_todo/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        background: '#f4f4f4',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted',\n        textDecoration: this.props.todo.completed ? 'line-through' : 'none' // if (this.props.todo.completed) {\n        //     return{\n        //         textDecoration: 'line-through'\n        //     }\n        // } else {\n        //     return{\n        //         textDecoration: 'none'\n        //     }\n        // }\n\n      };\n    };\n\n    this.markComplete = e => {\n      console.log(this.props);\n    };\n  }\n\n  render() {\n    const _this$props$todo = this.props.todo,\n          id = _this$props$todo.id,\n          title = _this$props$todo.title;\n    return React.createElement(\"div\", {\n      style: this.getStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.props.markComplete.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), ' ', title, React.createElement(\"button\", {\n      style: btnStyle,\n      onClick: this.props.delTodo.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"x\")));\n  }\n\n}\nTodoItem.PropType = {\n  addTodo: PropTypes.func.isRequired //PropTypes\n\n};\nconst btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  padding: '5px 10px',\n  borderRadius: '50%',\n  corsor: 'pointer',\n  float: 'right'\n};\nexport default TodoItem;","map":{"version":3,"sources":["/opt/ReactJsApps/react_crash_todo/src/components/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","markComplete","e","console","log","render","id","title","bind","btnStyle","delTodo","PropType","addTodo","func","isRequired","color","border","borderRadius","corsor","float"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SACpCG,QADoC,GACzB,MAAK;AACZ,aAAO;AACHC,QAAAA,UAAU,EAAE,SADT;AAEHC,QAAAA,OAAO,EAAE,MAFN;AAGHC,QAAAA,YAAY,EAAE,iBAHX;AAIHC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAChB,cADgB,GACD,MALZ,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfO,OAAP;AAgBH,KAlBmC;;AAAA,SAoBpCC,YApBoC,GAoBrBC,CAAD,IAAK;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACH,KAtBmC;AAAA;;AAuBpCO,EAAAA,MAAM,GAAG;AAAA,6BACe,KAAKP,KAAL,CAAWC,IAD1B;AAAA,UACEO,EADF,oBACEA,EADF;AAAA,UACMC,KADN,oBACMA,KADN;AAEL,WACI;AAAK,MAAA,KAAK,EAAG,KAAKd,QAAL,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWG,YAAX,CAAwBO,IAAxB,CAA6B,IAA7B,EAAkCF,EAAlC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAC0E,GAD1E,EAGCC,KAHD,EAIA;AAAQ,MAAA,KAAK,EAAEE,QAAf;AAAyB,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,OAAX,CAAmBF,IAAnB,CAAwB,IAAxB,EAA8BF,EAA9B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJA,CADJ,CADJ;AAUH;;AAnCmC;AAsCxCd,QAAQ,CAACmB,QAAT,GAAoB;AAChBC,EAAAA,OAAO,EAAErB,SAAS,CAACsB,IAAV,CAAeC,UADR,CAGpB;;AAHoB,CAApB;AAKE,MAAML,QAAQ,GAAE;AACZf,EAAAA,UAAU,EAAE,SADA;AAEZqB,EAAAA,KAAK,EAAE,MAFK;AAGZC,EAAAA,MAAM,EAAE,MAHI;AAIZrB,EAAAA,OAAO,EAAE,UAJG;AAKZsB,EAAAA,YAAY,EAAE,KALF;AAMZC,EAAAA,MAAM,EAAE,SANI;AAOZC,EAAAA,KAAK,EAAE;AAPK,CAAhB;AAUF,eAAe3B,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport class TodoItem extends Component {\n    getStyle = () =>{\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed?\n            'line-through':'none'\n        }\n        // if (this.props.todo.completed) {\n        //     return{\n        //         textDecoration: 'line-through'\n        //     }\n        // } else {\n        //     return{\n        //         textDecoration: 'none'\n        //     }\n        // }\n    }\n\n    markComplete =(e)=>{\n        console.log(this.props);\n    }\n    render() {\n        const {id, title} = this.props.todo;\n        return (\n            <div style={ this.getStyle() }>\n                <p> \n                <input type=\"checkbox\" onChange={this.props.markComplete.bind(this,id)}/>{' '}\n                {/* <input type=\"checkbox\" onChange={this.markComplete.bind(this)}/>{' '} */}\n                {title}\n                <button style={btnStyle} onClick={this.props.delTodo.bind(this, id)}>x</button>\n                </p>\n            </div>\n        )\n    }\n}\n\nTodoItem.PropType = {\n    addTodo: PropTypes.func.isRequired\n  }\n//PropTypes\n\n  const btnStyle ={\n      background: '#ff0000',\n      color: '#fff',\n      border: 'none',\n      padding: '5px 10px',\n      borderRadius: '50%',\n      corsor: 'pointer',\n      float: 'right'\n  }\n  \nexport default TodoItem"]},"metadata":{},"sourceType":"module"}